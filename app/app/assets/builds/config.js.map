{
  "version": 3,
  "sources": ["../../javascript/config.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\nexport function downloadEnabled() {\n  const cfgData = configData();\n  return cfgData['downloadEnabled'] == 'true';\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function supportPath() {\n  const cfgData = configData();\n  const supportPath = cfgData['supportPath'];\n\n  return supportPath;\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}"],
  "mappings": ";;;AAEA,IAAM,YAAY;AAEX,SAAS,aAAa;AAC3B,SAAO,SAAS,eAAe,SAAS,EAAE;AAC5C;AAEO,SAAS,cAAe;AAC7B,QAAM,UAAU,WAAW;AAI3B,MAAI,QAAQ,aAAa,EAAE,UAAU,GAAG;AACtC,WAAO,SAAS,WAAa,EAAE;AAAA,EACjC,OACK;AACH,UAAMA,eAAc,QAAQ,aAAa;AACzC,WAAO,SAASA,cAAa,EAAE;AAAA,EACjC;AACF;AAEO,SAAS,gBAAgB;AAC9B,QAAM,UAAU,WAAW;AAC3B,QAAMC,iBAAgB,QAAQ,eAAe;AAE7C,SAAOA;AACT;AAEO,SAAS,WAAU;AACxB,QAAM,UAAU,WAAW;AAC3B,QAAMC,YAAW,QAAQ,UAAU;AACnC,MAAGA,aAAY,KAAK;AAClB,WAAOA;AAAA,EACT,OAAO;AAEL,WAAOA,UAAS,UAAU,GAAGA,UAAS,SAAO,CAAC;AAAA,EAChD;AACF;AAEO,SAAS,YAAY;AAC1B,QAAM,aAAa,SAAS,cAAc,yBAAyB,EAAE;AAErE,SAAO;AACT;AAEO,SAAS,aAAa;AAC3B,QAAM,UAAU,WAAW;AAC3B,SAAO,KAAK,MAAM,QAAQ,YAAY,CAAC;AACzC;AAEO,SAAS,uBAAuB;AACrC,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ,aAAa,KAAK;AACnC;AAEO,SAAS,kBAAkB;AAChC,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ,iBAAiB,KAAK;AACvC;AAKO,SAAS,WAAU;AACxB,QAAM,UAAU,WAAW;AAC3B,QAAM,MAAM,QAAQ,UAAU;AAC9B,SAAO,OAAO,KAAK,OAAO;AAC5B;AAEO,SAAS,cAAc,MAAK;AACjC,QAAM,UAAU,WAAW;AAC3B,QAAM,WAAW,QAAQ,mBAAmB;AAC5C,SAAO,GAAG,QAAQ,IAAI,IAAI;AAC5B;AAEO,SAAS,cAAc;AAC5B,QAAM,UAAU,WAAW;AAC3B,SAAO,OAAO,QAAQ,aAAa,CAAC;AACtC;AAEO,SAAS,aAAa;AAC3B,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ,YAAY;AAC7B;AAEO,SAAS,kBAAkB;AAChC,QAAM,UAAU,WAAW;AAC3B,SAAO,OAAO,QAAQ,iBAAiB,CAAC;AAC1C;AAEO,SAAS,iBAAiB;AAC/B,QAAM,UAAU,WAAW;AAC3B,SAAO,QAAQ,gBAAgB;AACjC;AAEO,SAAS,cAAc;AAC5B,QAAM,UAAU,WAAW;AAC3B,QAAMC,eAAc,QAAQ,aAAa;AAEzC,SAAOA;AACT;AAEO,SAAS,0BAA0B;AACxC,QAAM,UAAU,WAAW;AAC3B,SAAO,SAAS,QAAQ,yBAAyB,CAAC;AACpD;",
  "names": ["maxFileSize", "transfersPath", "rootPath", "supportPath"]
}
