{
  "version": 3,
  "sources": ["../../javascript/utils.js", "../../javascript/dashboard.js"],
  "sourcesContent": ["import {analyticsPath} from \"./config\";\nimport { ariaNotify } from './aria_live_notify';\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function pageSpin() {\n  const ele = document.getElementById('full_page_spinner');\n  ele.classList.remove('d-none');\n  ariaNotify('Loading.');\n}\n\nexport function stopPageSpin() {\n  const ele = document.getElementById('full_page_spinner');\n  ele.classList.add('d-none');\n  ariaNotify('Loading complete.');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  let href = event.target.href;\n\n  // event.target could be a child of the anchor, so try that.\n  if(href == null) {\n    const closestAnchor = event.target.closest('a');\n    if(closestAnchor.hasChildNodes(event.target)) {\n      href = closestAnchor.href;\n    } else {\n      // event.target is not a child of an anhcor, so there's nothing to do.\n      return;\n    }\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n\n// helper method to hide an element. Note that jQuery's hide()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\n// target can be an id or an HTMLElement\nexport function hide(target) {\n  const ele = typeof target === 'string' ? document.getElementById(target) : target;\n  if(ele instanceof HTMLElement) {\n    ele.classList.add('d-none');\n  }\n}\n\n// helper method to show an element. Note that jQuery's show()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\n// target can be an id or an HTMLElement\nexport function show(target) {\n  const ele = typeof target === 'string' ? document.getElementById(target) : target;\n  if(ele instanceof HTMLElement) {\n    ele.classList.remove('d-none');\n  }\n}\n", "'use strict';\n\nimport { openLinkInJs } from './utils';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const anchors = document.querySelectorAll('a[target=_blank]');\n\n  anchors.forEach(anchor => {\n    anchor.addEventListener('click', (event) => { openLinkInJs(event); });\n  });\n});\n"],
  "mappings": ";AA0EO,SAAS,aAAa,OAAO;AAClC,QAAM,eAAe;AACrB,MAAI,OAAO,MAAM,OAAO;AAGxB,MAAG,QAAQ,MAAM;AACf,UAAM,gBAAgB,MAAM,OAAO,QAAQ,GAAG;AAC9C,QAAG,cAAc,cAAc,MAAM,MAAM,GAAG;AAC5C,aAAO,cAAc;AAAA,IACvB,OAAO;AAEL;AAAA,IACF;AAAA,EACF;AAEA,MAAG,OAAO,KAAK,IAAI,KAAK,MAAM;AAE5B,UAAM,OAAO,SAAS,eAAe,0BAA0B,EAAE;AACjE,UAAM,MAAM;AAIZ,UAAM,UAAU,SAAS,iBAAiB,kBAAkB,EAAE,CAAC;AAC/D,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,YAAY,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACrD,YAAQ,QAAQ,QAAQ;AAAA,EAC1B;AACF;;;ACjGA,SAAS,iBAAiB,oBAAoB,MAAM;AAClD,QAAM,UAAU,SAAS,iBAAiB,kBAAkB;AAE5D,UAAQ,QAAQ,YAAU;AACxB,WAAO,iBAAiB,SAAS,CAAC,UAAU;AAAE,mBAAa,KAAK;AAAA,IAAG,CAAC;AAAA,EACtE,CAAC;AACH,CAAC;",
  "names": []
}
